using System.Collections.Generic;using System.Linq;using Project.EntenEller.Base.Scripts.Advanced.Notifiers;using Project.EntenEller.Base.Scripts.Advanced.Serializations;using Project.EntenEller.Base.Scripts.Advanced.Spawns;using Project.EntenEller.Base.Scripts.Advanced.Tags;using Project.EntenEller.Base.Scripts.Cache.Components.Master;using Project.EntenEller.Base.Scripts.Network.HTTP;using Project.Scripts.Builder;using Project.Scripts.Builder.Building;using Project.Scripts.Builder.Building.Car;using Project.Scripts.Map;using Sirenix.Utilities;using UnityEngine;namespace Project.Scripts.HTTP{    public class CarIDUpdate : EEBehaviour    {        [SerializeField] private EEHTTPStringReceiver httpReceiver;        [SerializeField] private HTTPMapLoader httpMapLoader;        public HTTPDataMap.Data MapInfo;        protected override void EEAwake()        {            base.EEAwake();            httpMapLoader.UpdateCarIDNotifier.Event += OnSuccess;        }        protected override void EEDestroy()        {            base.EEDestroy();            httpMapLoader.UpdateCarIDNotifier.Event -= OnSuccess;        }        private void OnSuccess()        {            var mapData = ConvertHTTPData.ConvertHTTPDataInMapData(httpMapLoader.MapInfo);            UpdateCarID(mapData);        }                private void UpdateCarID(MapData mapData)        {            var targets = EETagUtils.FindEETagsInScenes("spawner-1");            foreach (var target in targets)            {                foreach (var data in mapData.List)                {                    var spawner = target.GetSelf<EESpawner>();                    for (var i = 0; i < spawner.ActiveAmount; i++)                    {                        if (!spawner.SpawnList[i].GetSelf<Building>().IsPlaced) continue;                        var obj = spawner.SpawnList[i];                                            var ID = obj.GetSelf<BuildingID>().GetID();                                            if(ID == data.ID)                            obj.GetSelf<CarID>().UpdateVisual(data.IDCar);                    }                }                            }        }    }}